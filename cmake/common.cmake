set(CMAKE_SYSTEM_PROCESSOR x86_64)
if (NOT DEFINED SHIRO_VERSION)
    set(SHIRO_VERSION "STANDALONE")
endif ()
set(CMAKE_VERBOSE_MAKEFILE ON)
find_program(CLANG NAMES clang REQUIRED)
find_program(CLANG++ NAMES clang++ REQUIRED)
find_program(LLD NAMES lld REQUIRED)

if (NOT DEFINED SHIRO_COMMON_OUTPUT_ONCE)
    message("=================================================")
    message("Overwriting default toolchain with Clang/LLVM")
    message("=================================================")
    message(STATUS "Found Clang: ${CLANG}")
    message(STATUS "Found Clang++: ${CLANG++}")
    message(STATUS "Found LLD: ${LLD}")
    set(SHIRO_COMMON_OUTPUT_ONCE "YES" CACHE INTERNAL "Do not print output again pls")
endif ()

set(CMAKE_C_COMPILER ${CLANG})
set(CMAKE_CXX_COMPILER ${CLANG++})
set(CMAKE_LINKER ${LLD})

set(CMAKE_ASM_NASM_COMPILE_OBJECT
        "<CMAKE_ASM_NASM_COMPILER> <FLAGS> -f win64 <INCLUDES> -o <OBJECT> <SOURCE>"
)
set(CMAKE_C_COMPILE_OBJECT
        "<CMAKE_C_COMPILER> <FLAGS> -target x86_64-pc-windows-msvc <INCLUDES> -c -o <OBJECT> <SOURCE>"
)
set(CMAKE_C_LINK_EXECUTABLE "<CMAKE_LINKER> -flavor link <LINK_FLAGS> <OBJECTS> <LINK_LIBRARIES> /out:<TARGET>")
set(CMAKE_ASM_NASM_LINK_EXECUTABLE "<CMAKE_LINKER> -flavor link <LINK_FLAGS> <OBJECTS> <LINK_LIBRARIES> /out:<TARGET>")

if (NOT DEFINED SHIRO_COMMON_INCLUDE_ONCE)
    include_directories(${SHIRO_SHALLOWNESS}/include)
endif ()
set(SHIRO_COMMON_INCLUDE_ONCE ON)

set(CMAKE_C_STANDARD 17)
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_C_EXTENSIONS OFF)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/lib/debug")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/lib/release")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO "${CMAKE_BINARY_DIR}/lib/relWithDebInfo")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL "${CMAKE_BINARY_DIR}/lib/minSizeRel")

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/lib/debug")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/lib/release")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO "${CMAKE_BINARY_DIR}/lib/relWithDebInfo")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL "${CMAKE_BINARY_DIR}/lib/minSizeRel")

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/bin/debug")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/bin/release")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO "${CMAKE_BINARY_DIR}/bin/relWithDebInfo")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL "${CMAKE_BINARY_DIR}/bin/minSizeRel")

macro(set_output_arc dir)
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${dir})

    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${dir})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${dir})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${dir})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${dir})
endmacro()

macro(set_output_lib dir)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${dir})

    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${dir})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${dir})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${dir})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL ${dir})
endmacro()

macro(set_output_run dir)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${dir})

    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${dir})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${dir})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${dir})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${dir})
endmacro()

macro(set_output dir)
    set_output_arc(${dir})
    set_output_lib(${dir})
    set_output_run(${dir})
endmacro()